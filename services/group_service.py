"""–°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø–∞–º–∏."""

from aiogram import Bot
from loguru import logger

from bot.database.manager import DatabaseManager
from bot.database.models.group import Group
from bot.services.admin_service import AdminService


class GroupService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏, —Å–≤—è–∑–∞–Ω–Ω–æ–π —Å –≥—Ä—É–ø–ø–∞–º–∏."""

    def __init__(self, db_manager: DatabaseManager, bot: Bot):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞.

        :param db_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
        :param bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞.
        """
        self.db = db_manager
        self.bot = bot
        self.admin_service = AdminService(db_manager)

    async def register_group(self, group_id: int, group_name: str) -> Group:
        """
        –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É –∏–ª–∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é.

        - –î–æ–±–∞–≤–ª—è–µ—Ç/–æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ.
        - –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏–∑ Telegram.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
        - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã.

        :param group_id: ID –≥—Ä—É–ø–ø—ã.
        :param group_name: –ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã.
        :return: –≠–∫–∑–µ–º–ø–ª—è—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã.
        """
        logger.info(f"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≥—Ä—É–ø–ø—ã: {group_name} ({group_id})")

        group = Group(
            group_id=group_id,
            group_name=group_name,
            is_active=True
        )
        await self.db.groups.add_or_update(group)

        # –û–±–Ω–æ–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≥—Ä—É–ø–ø—ã
        try:
            chat_admins = await self.bot.get_chat_administrators(group_id)
            await self.admin_service.update_group_admins(group_id, chat_admins)
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –≥—Ä—É–ø–ø—ã {group_id}: {e}")

        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã
        await self._auto_verify_existing_members(group_id, group_name)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        try:
            from bot.utils.commands import set_admin_commands_for_group
            logger.info(f"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≥—Ä—É–ø–ø—ã {group_id}")
            await set_admin_commands_for_group(self.bot, group_id)
            logger.info(f"–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≥—Ä—É–ø–ø—ã {group_id} —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≥—Ä—É–ø–ø—ã {group_id}: {e}")

        logger.info(f"–ì—Ä—É–ø–ø–∞ {group_name} ({group_id}) —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞/–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.")
        return group

    async def deactivate_group(self, group_id: int) -> None:
        """
        –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –≥—Ä—É–ø–ø—É.

        :param group_id: ID –≥—Ä—É–ø–ø—ã –¥–ª—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏.
        """
        logger.warning(f"–î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –≥—Ä—É–ø–ø—ã: {group_id}")
        await self.db.groups.set_active_status(group_id, is_active=False)

        try:
            from bot.utils.commands import remove_admin_commands_for_group
            await remove_admin_commands_for_group(self.bot, group_id)
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≥—Ä—É–ø–ø—ã {group_id}: {e}")

        logger.info(f"–ì—Ä—É–ø–ø–∞ {group_id} –±—ã–ª–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.")

    async def _auto_verify_existing_members(self, group_id: int, group_name: str) -> None:
        """
        –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –±–æ—Ç–∞.

        –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, Telegram Bot API –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä—è–º–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã.
        –ü–æ—ç—Ç–æ–º—É –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥: –≤–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º "–º—è–≥–∫–æ–π" –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏,
        –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É—é—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.

        :param group_id: ID –≥—Ä—É–ø–ø—ã
        :param group_name: –ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã
        """
        logger.info(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã '{group_name}' ({group_id})")

        try:
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã
            chat = await self.bot.get_chat(group_id)
            member_count = getattr(chat, 'member_count', 0)

            logger.info(f"–í –≥—Ä—É–ø–ø–µ {group_id} –Ω–∞–π–¥–µ–Ω–æ {member_count} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")

            if member_count > 5000:
                logger.warning(
                    f"–ì—Ä—É–ø–ø–∞ {group_id} —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è ({member_count} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤). –ê–≤—Ç–æ–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞.")
                return

            # Telegram Bot API –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã —á–µ—Ä–µ–∑ bot API
            # –ü–æ—ç—Ç–æ–º—É –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–ª–∞–≥ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –∞–≤—Ç–æ–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            logger.info(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∞–≤—Ç–æ–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–ª—è –≥—Ä—É–ø–ø—ã '{group_name}' ({group_id})")
            logger.info("üìã –£—á–∞—Å—Ç–Ω–∏–∫–∏ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –≥—Ä—É–ø–ø–µ")

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∞–≤—Ç–æ–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –≥—Ä—É–ø–ø—ã {group_id}: {e}")
            logger.info("–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –∞–≤—Ç–æ–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏. –£—á–∞—Å—Ç–Ω–∏–∫–∏ –¥–æ–ª–∂–Ω—ã –±—É–¥—É—Ç –ø—Ä–æ–π—Ç–∏ –æ–±—ã—á–Ω—É—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é.")

    async def _schedule_auto_verify_disable(self, group_id: int) -> None:
        """–£—Å—Ç–∞—Ä–µ–≤—à–∏–π –º–µ—Ç–æ–¥ - –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è."""
        pass
