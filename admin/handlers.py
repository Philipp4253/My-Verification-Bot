import asyncio

from aiogram import F, Router
from aiogram.exceptions import TelegramBadRequest
from aiogram.filters import Command, CommandStart
from aiogram.types import Message
from aiogram.utils.keyboard import InlineKeyboardBuilder
from loguru import logger

from bot.handlers.admin.core import user_is_admin_in_chat
from bot.services.admin_service import AdminService
from config.settings import Settings

# –í –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∏–º–ø–æ—Ä—Ç—ã
from aiogram.types import ChatMemberUpdated
from aiogram.filters import ChatMemberUpdatedFilter
from aiogram.enums import ChatMemberStatus

# –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞ (–ø–µ—Ä–µ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤)
@admin_handlers_router.chat_member(
    ChatMemberUpdatedFilter(
        member_status_changed=ChatMemberStatus.LEFT >> ChatMemberStatus.MEMBER
    )
)
async def on_new_member(event: ChatMemberUpdated, admin_service: AdminService, settings: Settings):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –≥—Ä—É–ø–ø—É.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –ø—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é.
    """
    try:
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –±–æ—Ç–æ–≤ –∏ —Å–ª—É—á–∞–∏, –∫–æ–≥–¥–∞ –±–æ—Ç —Å–∞–º –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –≥—Ä—É–ø–ø—É
        if event.new_chat_member.user.is_bot or event.new_chat_member.user.id == event.bot.id:
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –≤ –≥—Ä—É–ø–ø–µ/—Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–µ
        if event.chat.type not in ["group", "supergroup"]:
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –ø—Ä–æ—à–µ–ª –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é
        if await admin_service.is_user_verified(event.new_chat_member.user.id, event.chat.id):
            return

        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –õ–°
            await event.bot.send_message(
                chat_id=event.new_chat_member.user.id,
                text=f"üëã –ü—Ä–∏–≤–µ—Ç, {event.new_chat_member.user.first_name}!\n\n"
                     f"–ß—Ç–æ–±—ã –ø–∏—Å–∞—Ç—å –≤ –≥—Ä—É–ø–ø–µ {event.chat.title}, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é.\n\n"
                     f"–ù–∞–∂–º–∏ /verify –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å."
            )
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {event.new_chat_member.user.id}: {e}")
            # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –õ–°, –ø–∏—à–µ–º –≤ –≥—Ä—É–ø–ø—É (–µ—Å–ª–∏ –±–æ—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞)
            if await user_is_admin_in_chat(
                await event.bot.me(), event.chat.id, admin_service, settings, event.bot
            ):
                msg = await event.chat.send_message(
                    f"{event.new_chat_member.user.mention_html()}, "
                    f"–¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç—É —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é. –ù–∞–∂–º–∏ /verify",
                    parse_mode="HTML"
                )
                # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É
                asyncio.create_task(_delete_message_later(msg))
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞: {e}", exc_info=True)


async def _delete_message_later(message: Message, delay: int = 60):
    """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥"""
    await asyncio.sleep(delay)
    try:
        await message.delete()
    except Exception:
        pass

admin_handlers_router = Router(name="admin_handlers")


def get_admin_panel_keyboard(group_id: int) -> InlineKeyboardBuilder:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —Å group_id –≤ –∫–æ–ª–±—ç–∫–∞—Ö."""
    builder = InlineKeyboardBuilder()
    builder.button(
        text="‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Whitelist",
        callback_data=f"admin:whitelist:manage:{group_id}",
    )
    builder.adjust(1)
    return builder


@admin_handlers_router.message(Command("admin"), F.chat.type.in_(["group", "supergroup"]))
async def admin_command_in_group(
    message: Message, admin_service: AdminService, settings: Settings
):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /admin –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö.
    –î–æ—Å—Ç—É–ø–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –≥—Ä—É–ø–ø—ã.
    """
    try:
        is_admin = await user_is_admin_in_chat(
            message.from_user, message.chat.id, admin_service, settings, message.bot
        )

        if not is_admin:
            logger.debug(
                f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≥—Ä—É–ø–ø—ã {message.chat.id}")
            return


        admin_text = "üîß <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å</b>"
        keyboard = get_admin_panel_keyboard(message.chat.id).as_markup()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∞–Ω–æ–Ω–∏–º–Ω—ã–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        if message.from_user.is_bot and message.from_user.username == "GroupAnonymousBot":
            bot_username = (await message.bot.get_me()).username
            warning_msg = await message.reply(
                f"üîß **–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å**\n\n"
                f"üëÜ [–û—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è](https://t.me/{bot_username}?start=admin_{message.chat.id})",
                parse_mode="Markdown"
            )
            asyncio.create_task(_delete_admin_messages(message, warning_msg))
            return

        try:
            await message.bot.send_message(
                chat_id=message.from_user.id,
                text=f"{admin_text} –¥–ª—è –≥—Ä—É–ø–ø—ã <b>{message.chat.title}</b>.",
                reply_markup=keyboard,
            )

            sent_message = await message.reply(
                "‚úÖ –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è."
            )
            await asyncio.sleep(5)
            await sent_message.delete()
            await message.delete()

        except TelegramBadRequest as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}: {e}")

            bot_username = (await message.bot.get_me()).username
            warning_msg = await message.reply(
                f"‚ö†Ô∏è @{message.from_user.username or message.from_user.first_name}, "
                f"–¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏:\n\n"
                f"üëÜ [–ö–ª–∏–∫–Ω–∏—Ç–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏](https://t.me/{bot_username}?start=admin_{message.chat.id})\n\n"
                f"üí° –ü–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ —Å—Å—ã–ª–∫–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin —Å–Ω–æ–≤–∞ –≤ –≥—Ä—É–ø–ø–µ.",
                parse_mode="Markdown"
            )

            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
            asyncio.create_task(_delete_admin_messages(message, warning_msg))

    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã: {e}", exc_info=True)
        try:
            error_message = await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã.")
            if message.chat.type in ["group", "supergroup"]:
                asyncio.create_task(_delete_admin_messages(message, error_message))
        except Exception:
            pass


async def _delete_admin_messages(original_message: Message, warning_message: Message):
    """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥."""
    await asyncio.sleep(30)
    try:
        await warning_message.delete()
        await original_message.delete()
    except Exception:
        pass


@admin_handlers_router.message(Command(commands=["admin"]), F.chat.type == "private")
async def admin_command_in_private(message: Message, settings: Settings, admin_service: AdminService):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /admin –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.
    –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ –≥—Ä—É–ø–ø–µ.
    –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.
    """
    user_id = message.from_user.id
    if user_id not in settings.admin_user_ids:
        is_group_admin = await admin_service.is_user_admin_in_any_group(user_id)
        if not is_group_admin:
            await message.answer(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –≥—Ä—É–ø–ø."
            )
            return

    await message.answer(
        "–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ –≥—Ä—É–ø–ø–µ, "
        "–≥–¥–µ —Ö–æ—Ç–∏—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏.\n\n"
        "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è "
        "—Å –ø—Ä–∏–≤—è–∑–∫–æ–π –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ."
    )


@admin_handlers_router.message(CommandStart(deep_link=True, magic=F.args.startswith("admin_")))
async def admin_deep_link_handler(message: Message, admin_service: AdminService, settings: Settings):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥—ã –ø–æ —Å—Å—ã–ª–∫–µ /start admin_group_id.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã.
    """
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º group_id –∏–∑ deep link
        group_id = int(message.text.split("admin_")[1])

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        is_admin = await user_is_admin_in_chat(
            message.from_user, group_id, admin_service, settings, message.bot
        )

        if not is_admin:
            await message.answer(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ."
            )
            return

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ
        try:
            chat = await message.bot.get_chat(group_id)
            group_name = chat.title
        except Exception:
            group_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
        admin_text = "üîß <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å</b>"
        keyboard = get_admin_panel_keyboard(group_id).as_markup()

        await message.answer(
            f"{admin_text} –¥–ª—è –≥—Ä—É–ø–ø—ã <b>{group_name}</b>.\n\n"
            f"‚úÖ –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–æ—Ç–∞ –¥–ª—è —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã.",
            reply_markup=keyboard
        )

    except (ValueError, IndexError):
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin –≤ –≥—Ä—É–ø–ø–µ."
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ admin deep link: {e}")
        await message.answer(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /admin –≤ –≥—Ä—É–ø–ø–µ."
        )
