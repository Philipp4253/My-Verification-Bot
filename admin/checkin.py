"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /checkin –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤."""

import asyncio
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message
from loguru import logger

from bot.database.manager import DatabaseManager
from config.settings import settings

checkin_router = Router(name="checkin_router")
checkin_router.message.filter(F.chat.type.in_(["group", "supergroup"]))


@checkin_router.message(Command("checkin"))
async def checkin_command(message: Message, db_manager: DatabaseManager):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã.
    –î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –≥—Ä—É–ø–ø—ã.
    """
    if not message.from_user:
        return

    user_id = message.from_user.id
    group_id = message.chat.id
    is_anonymous_admin = False

    try:
        if message.from_user.is_bot and message.from_user.username == "GroupAnonymousBot":
            is_anonymous_admin = True
            is_global_admin = False
            is_group_admin = True
        else:
            is_global_admin = user_id in settings.admin_user_ids
            is_group_admin = False

            if not is_global_admin:
                try:
                    chat_member = await message.bot.get_chat_member(group_id, user_id)
                    is_group_admin = chat_member.status in ["administrator", "creator"]
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
                    try:
                        await message.bot.send_message(user_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
                    except:
                        error_message = await message.reply("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
                        asyncio.create_task(_delete_checkin_messages(message, error_message))
                    return

        if not (is_global_admin or is_group_admin):
            logger.debug(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /checkin –≤ –≥—Ä—É–ø–ø–µ {group_id} –±–µ–∑ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
            return

        group = await db_manager.groups.get_by_id(group_id)
        if not group or not group.is_active:
            if is_anonymous_admin:
                error_message = await message.reply("‚ùå –ì—Ä—É–ø–ø–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ")
                asyncio.create_task(_delete_checkin_messages(message, error_message))
            else:
                try:
                    await message.bot.send_message(user_id, "‚ùå –ì—Ä—É–ø–ø–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ")
                except:
                    error_message = await message.reply("‚ùå –ì—Ä—É–ø–ø–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º–µ")
                    asyncio.create_task(_delete_checkin_messages(message, error_message))
            return

        new_mode = await db_manager.groups.toggle_checkin_mode(group_id)

        if new_mode:
            response = (
                "‚úÖ <b>–†–µ–∂–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∫–ª—é—á–µ–Ω</b>\n\n"
                "–¢–µ–ø–µ—Ä—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π –±—É–¥—É—Ç "
                "–ø–æ–ª—É—á–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏.\n\n"
                "‚ùóÔ∏è –°–æ–æ–±—â–µ–Ω–∏—è –£–î–ê–õ–Ø–Æ–¢–°–Ø –¥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏\n"
                "‚ö†Ô∏è –ü–æ—Å–ª–µ 3+ —Å–æ–æ–±—â–µ–Ω–∏–π –±–µ–∑ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±–∞–Ω\n"
                f"‚è∞ –í—Ä–µ–º—è –Ω–∞ –Ω–∞—á–∞–ª–æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: {settings.format_verification_start_timeout()}\n\n"
                "üîÑ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–∑–æ–≤ /checkin –æ—Ç–∫–ª—é—á–∏—Ç —Ä–µ–∂–∏–º"
            )
        else:
            response = (
                "üî¥ <b>–†–µ–∂–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω</b>\n\n"
                "–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –º–æ–≥—É—Ç –ø–∏—Å–∞—Ç—å –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.\n"
                "–ù–æ–≤—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é."
            )

        if is_anonymous_admin:
            sent_message = await message.reply(response, parse_mode="HTML")
            asyncio.create_task(_delete_checkin_messages(message, sent_message))
        else:
            try:
                await message.bot.send_message(user_id, response, parse_mode="HTML")
                sent_message = await message.reply("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.")
                asyncio.create_task(_delete_checkin_messages(message, sent_message))
            except Exception as pm_error:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {user_id} –≤ –ª–∏—á–∫—É: {pm_error}")
                sent_message = await message.reply(response, parse_mode="HTML")
                asyncio.create_task(_delete_checkin_messages(message, sent_message))
        
        admin_name = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        logger.info(
            f"–†–µ–∂–∏–º checkin {'–≤–∫–ª—é—á–µ–Ω' if new_mode else '–æ—Ç–∫–ª—é—á–µ–Ω'} "
            f"–≤ –≥—Ä—É–ø–ø–µ {group_id} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {user_id} ({admin_name})"
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã /checkin: {e}")
        if is_anonymous_admin:
            error_message = await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
            asyncio.create_task(_delete_checkin_messages(message, error_message))
        else:
            try:
                await message.bot.send_message(user_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
            except:
                error_message = await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã")
                asyncio.create_task(_delete_checkin_messages(message, error_message))


async def _delete_checkin_messages(original_message: Message, response_message: Message):
    """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã checkin —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥."""
    await asyncio.sleep(5)
    try:
        await response_message.delete()
        await original_message.delete()
    except Exception:
        pass
