#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—Ä–∞—á–µ–π.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python start.py
"""

import sys
import os
from pathlib import Path
import asyncio
import platform

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º traceback –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–æ–∫
import traceback

from loguru import logger

from bot.app import BotApp
from config.settings import settings

project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    try:
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        logger.remove()
        logger.add(sys.stderr, level="DEBUG")
        logger.add("bot.log", level="DEBUG", rotation="10 MB", retention=1)

        env_file = project_root / ".env"
        if not env_file.exists():
            print("‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            print("üí° –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ env.example")
            print("üìã –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: cp env.example .env")
            sys.exit(1)

        if sys.version_info < (3, 8):
            print("‚ùå –û—à–∏–±–∫–∞: —Ç—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
            print(f"üìã –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {sys.version}")
            sys.exit(1)

        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—Ä–∞—á–µ–π...")
        logger.info("üìã –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        app = BotApp(settings)
        asyncio.run(app.run())

    except ImportError as e:
        logger.critical(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        # –ü–µ—á–∞—Ç–∞–µ–º –ø–æ–ª–Ω—ã–π traceback, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å, –≥–¥–µ –∏–º–µ–Ω–Ω–æ –ø—Ä–æ–±–ª–µ–º–∞
        traceback.print_exc()
        logger.info("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
    except (KeyboardInterrupt, SystemExit):
        logger.info("‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
    except Exception as e:
        logger.critical(f"üí• –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        traceback.print_exc()


if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
    logger.info(f"–ó–∞–ø—É—Å–∫ –Ω–∞ Python {sys.version_info.major}.{sys.version_info.minor}.{sys.version_info.micro}")
    if sys.version_info < (3, 12):
        logger.critical("–¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.12 –∏–ª–∏ –≤—ã—à–µ.")
    else:
        main()
